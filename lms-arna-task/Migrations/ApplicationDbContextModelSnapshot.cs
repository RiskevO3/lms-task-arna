// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lms_arna_task.Data;

#nullable disable

namespace lmsarnatask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("lms_arna_task.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2240),
                            CreatedById = 1,
                            Description = "Learn the basics of programming concepts",
                            EndDate = new DateTime(2025, 7, 10, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2240),
                            IsActive = true,
                            MaterialContent = "https://example.com/programming-basics.pdf",
                            MaterialType = "PDF",
                            StartDate = new DateTime(2025, 6, 26, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2220),
                            Title = "Introduction to Programming",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2240)
                        });
                });

            modelBuilder.Entity("lms_arna_task.Models.AssignmentProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("UserId", "AssignmentId")
                        .IsUnique();

                    b.ToTable("AssignmentProgresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 6, 29, 0, 11, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 100,
                            StartedAt = new DateTime(2025, 6, 28, 23, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 6, 29, 0, 11, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 6, 30, 6, 52, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 40,
                            StartedAt = new DateTime(2025, 6, 30, 6, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 6, 30, 6, 52, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 7, 2, 8, 5, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 80,
                            StartedAt = new DateTime(2025, 7, 2, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 7, 2, 8, 5, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 5
                        },
                        new
                        {
                            Id = 4,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 7, 1, 19, 57, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 60,
                            StartedAt = new DateTime(2025, 7, 1, 19, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 7, 1, 19, 57, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 6, 28, 14, 49, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 40,
                            StartedAt = new DateTime(2025, 6, 28, 14, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 6, 28, 14, 49, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            AssignmentId = 1,
                            IsCompleted = false,
                            Score = 0,
                            StartedAt = new DateTime(2025, 7, 2, 16, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 7, 2, 16, 46, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            AssignmentId = 1,
                            CompletedAt = new DateTime(2025, 6, 28, 20, 2, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            IsCompleted = true,
                            Score = 60,
                            StartedAt = new DateTime(2025, 6, 28, 19, 33, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UpdatedAt = new DateTime(2025, 6, 28, 20, 2, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            UserId = 11
                        });
                });

            modelBuilder.Entity("lms_arna_task.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionD")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentId = 1,
                            CorrectAnswer = "B",
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2340),
                            OptionA = "A fixed value",
                            OptionB = "A container for storing data",
                            OptionC = "A function",
                            OptionD = "A loop",
                            QuestionText = "What is a variable in programming?",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2340)
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 1,
                            CorrectAnswer = "D",
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350),
                            OptionA = "HTML",
                            OptionB = "CSS",
                            OptionC = "JavaScript",
                            OptionD = "All of the above",
                            QuestionText = "Which of the following is a programming language?",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350)
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 1,
                            CorrectAnswer = "B",
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350),
                            OptionA = "Loops through code",
                            OptionB = "Makes decisions in code",
                            OptionC = "Stores data",
                            OptionD = "Prints output",
                            QuestionText = "What does 'if' statement do?",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentId = 1,
                            CorrectAnswer = "A",
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350),
                            OptionA = "A reusable block of code",
                            OptionB = "A variable",
                            OptionC = "A loop",
                            OptionD = "A condition",
                            QuestionText = "What is a function?",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 1,
                            CorrectAnswer = "C",
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350),
                            OptionA = "Writing code",
                            OptionB = "Testing code",
                            OptionC = "Finding and fixing errors",
                            OptionD = "Compiling code",
                            QuestionText = "What does debugging mean?",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(2350)
                        });
                });

            modelBuilder.Entity("lms_arna_task.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 8, 888, DateTimeKind.Utc).AddTicks(6750),
                            Email = "manager@example.com",
                            PasswordHash = "$2a$11$aTrhKBJ8IgLzSHYLBpNiWOldfBrJDRymED1OnMQ2ukQ6oSfP9.3rq",
                            Role = "Manager",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 8, 888, DateTimeKind.Utc).AddTicks(6750),
                            Username = "manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 20, DateTimeKind.Utc).AddTicks(9370),
                            Email = "learner1@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$Z8P6LGLvh5rDkNQCDzehLeqEWQ32sgpyjtXA/vRPMAq1shIpA9D7i",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 20, DateTimeKind.Utc).AddTicks(9370),
                            Username = "learner1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 154, DateTimeKind.Utc).AddTicks(5450),
                            Email = "learner2@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$1VBPWO21Eb2s0nto5gbuxuue3TO5EJZ20zH6TFr7TrDDHUt9TQHaW",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 154, DateTimeKind.Utc).AddTicks(5450),
                            Username = "learner2"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 287, DateTimeKind.Utc).AddTicks(6260),
                            Email = "learner3@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$1PKU/mneyvrhNZcA80DPpeJWoAvNf8okI75RxnDOU/fEAUJV9DzN6",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 287, DateTimeKind.Utc).AddTicks(6260),
                            Username = "learner3"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 418, DateTimeKind.Utc).AddTicks(5400),
                            Email = "learner4@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$rhcvtQDUFkzaRxEDGPnSUeNLQPQuNVrgy/tKQAh/ZEaZMGdiw9Iau",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 418, DateTimeKind.Utc).AddTicks(5400),
                            Username = "learner4"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 549, DateTimeKind.Utc).AddTicks(380),
                            Email = "learner5@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$njegO8Tt5EOP6CS/OCPpQ.w7bR/g4Qz6JnVdFtC88liA4oTuqe9dG",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 549, DateTimeKind.Utc).AddTicks(380),
                            Username = "learner5"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 680, DateTimeKind.Utc).AddTicks(5310),
                            Email = "learner6@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$pf4k3Qqaz3lFXFo5RW1NfuTgw8qh9sqHJB87KKFZ0ngEYOX3OSF.K",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 680, DateTimeKind.Utc).AddTicks(5310),
                            Username = "learner6"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 811, DateTimeKind.Utc).AddTicks(2940),
                            Email = "learner7@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$81ySK6jm3wUT2BLhUHEWtuFSF2eXz8UQxsOVAPZiz5Z6ryJwUtrsi",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 811, DateTimeKind.Utc).AddTicks(2940),
                            Username = "learner7"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 942, DateTimeKind.Utc).AddTicks(200),
                            Email = "learner8@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$7xrnB5itcjd2rphCyUHrj.eAEIsuNVPqdLS/En6yRCAYXB6qqrE.q",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 9, 942, DateTimeKind.Utc).AddTicks(200),
                            Username = "learner8"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 71, DateTimeKind.Utc).AddTicks(6970),
                            Email = "learner9@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$zqzbZQUCRWs4t9.DG01O9uedorOlaPCFMKbA9fLUlTUFE7Odmx.IK",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 71, DateTimeKind.Utc).AddTicks(6970),
                            Username = "learner9"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(1200),
                            Email = "learner10@example.com",
                            ManagerId = 1,
                            PasswordHash = "$2a$11$B0OfveVG51mAOSbkhja67OZRFXKZC267KKmcLmAmgTLGYyb8UnI/u",
                            Role = "Learner",
                            UpdatedAt = new DateTime(2025, 7, 3, 7, 33, 10, 204, DateTimeKind.Utc).AddTicks(1200),
                            Username = "learner10"
                        });
                });

            modelBuilder.Entity("lms_arna_task.Models.UserAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssignmentProgressId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedAnswer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentProgressId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnswers");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            AnsweredAt = new DateTime(2025, 6, 29, 0, 6, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 1,
                            IsCorrect = true,
                            QuestionId = 1,
                            SelectedAnswer = "B",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnsweredAt = new DateTime(2025, 6, 29, 0, 8, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 1,
                            IsCorrect = true,
                            QuestionId = 2,
                            SelectedAnswer = "D",
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            AnsweredAt = new DateTime(2025, 6, 28, 23, 58, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 1,
                            IsCorrect = true,
                            QuestionId = 3,
                            SelectedAnswer = "B",
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            AnsweredAt = new DateTime(2025, 6, 28, 23, 48, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 1,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            AnsweredAt = new DateTime(2025, 6, 29, 0, 10, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 1,
                            IsCorrect = true,
                            QuestionId = 5,
                            SelectedAnswer = "C",
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            AnsweredAt = new DateTime(2025, 6, 30, 6, 59, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 2,
                            IsCorrect = false,
                            QuestionId = 1,
                            SelectedAnswer = "C",
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            AnsweredAt = new DateTime(2025, 6, 30, 6, 43, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 2,
                            IsCorrect = false,
                            QuestionId = 2,
                            SelectedAnswer = "A",
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            AnsweredAt = new DateTime(2025, 6, 30, 6, 58, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 2,
                            IsCorrect = false,
                            QuestionId = 3,
                            SelectedAnswer = "D",
                            UserId = 4
                        },
                        new
                        {
                            Id = 14,
                            AnsweredAt = new DateTime(2025, 6, 30, 6, 50, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 2,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            AnsweredAt = new DateTime(2025, 6, 30, 6, 38, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 2,
                            IsCorrect = true,
                            QuestionId = 5,
                            SelectedAnswer = "C",
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            AnsweredAt = new DateTime(2025, 7, 2, 7, 40, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 3,
                            IsCorrect = true,
                            QuestionId = 1,
                            SelectedAnswer = "B",
                            UserId = 5
                        },
                        new
                        {
                            Id = 17,
                            AnsweredAt = new DateTime(2025, 7, 2, 7, 42, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 3,
                            IsCorrect = true,
                            QuestionId = 2,
                            SelectedAnswer = "D",
                            UserId = 5
                        },
                        new
                        {
                            Id = 18,
                            AnsweredAt = new DateTime(2025, 7, 2, 7, 49, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 3,
                            IsCorrect = false,
                            QuestionId = 3,
                            SelectedAnswer = "A",
                            UserId = 5
                        },
                        new
                        {
                            Id = 19,
                            AnsweredAt = new DateTime(2025, 7, 2, 7, 39, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 3,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnsweredAt = new DateTime(2025, 7, 2, 7, 40, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 3,
                            IsCorrect = true,
                            QuestionId = 5,
                            SelectedAnswer = "C",
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            AnsweredAt = new DateTime(2025, 7, 1, 19, 48, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 4,
                            IsCorrect = true,
                            QuestionId = 1,
                            SelectedAnswer = "B",
                            UserId = 6
                        },
                        new
                        {
                            Id = 22,
                            AnsweredAt = new DateTime(2025, 7, 1, 19, 40, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 4,
                            IsCorrect = false,
                            QuestionId = 2,
                            SelectedAnswer = "A",
                            UserId = 6
                        },
                        new
                        {
                            Id = 23,
                            AnsweredAt = new DateTime(2025, 7, 1, 20, 9, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 4,
                            IsCorrect = true,
                            QuestionId = 3,
                            SelectedAnswer = "B",
                            UserId = 6
                        },
                        new
                        {
                            Id = 24,
                            AnsweredAt = new DateTime(2025, 7, 1, 19, 57, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 4,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 6
                        },
                        new
                        {
                            Id = 25,
                            AnsweredAt = new DateTime(2025, 7, 1, 19, 38, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 4,
                            IsCorrect = false,
                            QuestionId = 5,
                            SelectedAnswer = "A",
                            UserId = 6
                        },
                        new
                        {
                            Id = 26,
                            AnsweredAt = new DateTime(2025, 6, 28, 14, 56, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 5,
                            IsCorrect = false,
                            QuestionId = 1,
                            SelectedAnswer = "D",
                            UserId = 7
                        },
                        new
                        {
                            Id = 27,
                            AnsweredAt = new DateTime(2025, 6, 28, 14, 39, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 5,
                            IsCorrect = false,
                            QuestionId = 2,
                            SelectedAnswer = "B",
                            UserId = 7
                        },
                        new
                        {
                            Id = 28,
                            AnsweredAt = new DateTime(2025, 6, 28, 14, 55, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 5,
                            IsCorrect = true,
                            QuestionId = 3,
                            SelectedAnswer = "B",
                            UserId = 7
                        },
                        new
                        {
                            Id = 29,
                            AnsweredAt = new DateTime(2025, 6, 28, 14, 54, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 5,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 7
                        },
                        new
                        {
                            Id = 30,
                            AnsweredAt = new DateTime(2025, 6, 28, 15, 1, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 5,
                            IsCorrect = false,
                            QuestionId = 5,
                            SelectedAnswer = "B",
                            UserId = 7
                        },
                        new
                        {
                            Id = 46,
                            AnsweredAt = new DateTime(2025, 6, 28, 19, 43, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 9,
                            IsCorrect = true,
                            QuestionId = 1,
                            SelectedAnswer = "B",
                            UserId = 11
                        },
                        new
                        {
                            Id = 47,
                            AnsweredAt = new DateTime(2025, 6, 28, 19, 58, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 9,
                            IsCorrect = true,
                            QuestionId = 2,
                            SelectedAnswer = "D",
                            UserId = 11
                        },
                        new
                        {
                            Id = 48,
                            AnsweredAt = new DateTime(2025, 6, 28, 20, 4, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 9,
                            IsCorrect = false,
                            QuestionId = 3,
                            SelectedAnswer = "D",
                            UserId = 11
                        },
                        new
                        {
                            Id = 49,
                            AnsweredAt = new DateTime(2025, 6, 28, 20, 0, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 9,
                            IsCorrect = true,
                            QuestionId = 4,
                            SelectedAnswer = "A",
                            UserId = 11
                        },
                        new
                        {
                            Id = 50,
                            AnsweredAt = new DateTime(2025, 6, 28, 19, 38, 10, 204, DateTimeKind.Utc).AddTicks(2450),
                            AssignmentProgressId = 9,
                            IsCorrect = false,
                            QuestionId = 5,
                            SelectedAnswer = "D",
                            UserId = 11
                        });
                });

            modelBuilder.Entity("lms_arna_task.Models.Assignment", b =>
                {
                    b.HasOne("lms_arna_task.Models.User", "CreatedBy")
                        .WithMany("CreatedAssignments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("lms_arna_task.Models.AssignmentProgress", b =>
                {
                    b.HasOne("lms_arna_task.Models.Assignment", "Assignment")
                        .WithMany("AssignmentProgresses")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lms_arna_task.Models.User", "User")
                        .WithMany("AssignmentProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lms_arna_task.Models.Question", b =>
                {
                    b.HasOne("lms_arna_task.Models.Assignment", "Assignment")
                        .WithMany("Questions")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("lms_arna_task.Models.User", b =>
                {
                    b.HasOne("lms_arna_task.Models.User", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("lms_arna_task.Models.UserAnswer", b =>
                {
                    b.HasOne("lms_arna_task.Models.AssignmentProgress", "AssignmentProgress")
                        .WithMany("UserAnswers")
                        .HasForeignKey("AssignmentProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lms_arna_task.Models.Question", "Question")
                        .WithMany("UserAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lms_arna_task.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignmentProgress");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lms_arna_task.Models.Assignment", b =>
                {
                    b.Navigation("AssignmentProgresses");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("lms_arna_task.Models.AssignmentProgress", b =>
                {
                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("lms_arna_task.Models.Question", b =>
                {
                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("lms_arna_task.Models.User", b =>
                {
                    b.Navigation("AssignmentProgresses");

                    b.Navigation("CreatedAssignments");

                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
