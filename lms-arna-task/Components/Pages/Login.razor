@page "/login"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using lms_arna_task.Services.Interfaces
@inject IUserService UserService
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Login to LMS</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">
                            @errorMessage
                        </div>
                    }

                    <!-- Use a regular HTML form that posts to the API -->
                    <form method="post" action="/api/auth/login" id="loginForm">
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" name="username" required />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                Login
                            </button>
                        </div>
                    </form>

                    <div class="mt-3 text-center">
                        <small class="text-muted">
                            Demo credentials:<br />
                            Manager: manager / password123<br />
                            Learner: learner1 / password123
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage = string.Empty;

    protected override void OnInitialized()
    {
        // Check if there's an error message in the query string
        var uri = new Uri(Navigation.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("error", out var error))
        {
            errorMessage = error.ToString();
        }
    }
}
